{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/Programming/Sites/instagram-clone/frontend/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport { Avatar, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:8000/';\nexport default function Post(_ref) {\n  _s();\n  let {\n    post,\n    authTokenType,\n    authToken\n  } = _ref;\n  const [imageUrl, setImageUrl] = useState('');\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    if (post.image_url_type === 'absolute') {\n      setImageUrl(post.image_url);\n    } else {\n      setImageUrl(BASE_URL + post.image_url);\n    }\n  }, []);\n  useEffect(() => {\n    setComments(post.comments);\n  }, []);\n  const handleDelete = event => {\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    const requestOptions = {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': authTokenType\n      })\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"Catalin\",\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_headerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"post_delete\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"post_image\",\n      src: imageUrl,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"post_text\",\n      children: post.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_comments\",\n      children: comments === null || comments === void 0 ? void 0 : comments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), comment.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Post, \"07fUvvR83qsxqhX3tlrLOQfQVaQ=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","Avatar","Button","BASE_URL","Post","post","authTokenType","authToken","imageUrl","setImageUrl","comments","setComments","image_url_type","image_url","handleDelete","event","preventDefault","requestOptions","method","headers","Headers","user","username","caption","map","comment","text"],"sources":["/home/aleksandr/Programming/Sites/instagram-clone/frontend/src/components/Post.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Post.css'\nimport { Avatar, Button } from \"@mui/material\";\n\nconst BASE_URL = 'http://localhost:8000/'\n\nexport default function Post({post, authTokenType, authToken}) {\n    const [imageUrl, setImageUrl] = useState('')\n    const [comments, setComments] = useState([])\n\n    useEffect(() => {\n        if (post.image_url_type === 'absolute') {\n            setImageUrl(post.image_url)\n        } else {\n            setImageUrl(BASE_URL + post.image_url)\n        }\n    }, [])\n\n    useEffect(() => {\n        setComments(post.comments)\n    }, [])\n    \n    const handleDelete = (event) => {\n        event?.preventDefault();\n\n        const requestOptions = {\n            method: 'GET',\n            headers: new Headers({\n                'Authorization': authTokenType\n            })\n        }\n\n    }\n\n    return (\n        <div className='post'>\n            <div className=\"post_header\">\n                <Avatar alt=\"Catalin\"\n                        src=\"\"/>\n            \n            <div className=\"post_headerInfo\">\n                <h3>{post.user.username}</h3>        \n                <Button className=\"post_delete\" onClick={handleDelete}>Delete</Button>\n            </div>\n            </div>\n\n            <img \n                className='post_image' \n                src={imageUrl}\n                alt=''/>\n\n            <h4 className='post_text'>{post.caption}</h4>\n\n            <div className='post_comments'>\n\n        {\n            comments?.map((comment) => (\n                <p>\n                <strong>{comment.username}: </strong>\n                {comment.text}\n                </p>\n            ))\n        }\n      </div>\n        </div>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,SAASC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AAAC;AAE/C,MAAMC,QAAQ,GAAG,wBAAwB;AAEzC,eAAe,SAASC,IAAI,OAAmC;EAAA;EAAA,IAAlC;IAACC,IAAI;IAAEC,aAAa;IAAEC;EAAS,CAAC;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,IAAIK,IAAI,CAACO,cAAc,KAAK,UAAU,EAAE;MACpCH,WAAW,CAACJ,IAAI,CAACQ,SAAS,CAAC;IAC/B,CAAC,MAAM;MACHJ,WAAW,CAACN,QAAQ,GAAGE,IAAI,CAACQ,SAAS,CAAC;IAC1C;EACJ,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACZW,WAAW,CAACN,IAAI,CAACK,QAAQ,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,cAAc,EAAE;IAEvB,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE,IAAIC,OAAO,CAAC;QACjB,eAAe,EAAEd;MACrB,CAAC;IACL,CAAC;EAEL,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB,QAAC,MAAM;QAAC,GAAG,EAAC,SAAS;QACb,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAEpB;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAA,UAAKD,IAAI,CAACgB,IAAI,CAACC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM,eAC7B,QAAC,MAAM;UAAC,SAAS,EAAC,aAAa;UAAC,OAAO,EAAER,YAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA,QACpE;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eAEN;MACI,SAAS,EAAC,YAAY;MACtB,GAAG,EAAEN,QAAS;MACd,GAAG,EAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAEZ;MAAI,SAAS,EAAC,WAAW;MAAA,UAAEH,IAAI,CAACkB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,eAE7C;MAAK,SAAS,EAAC,eAAe;MAAA,UAG9Bb,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEc,GAAG,CAAEC,OAAO,iBAClB;QAAA,wBACA;UAAA,WAASA,OAAO,CAACH,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAY,EACpCG,OAAO,CAACC,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEd;AAAC,GA5DuBtB,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}